This document explains how to build and install QWinFF.

QWinFF needs ffmpeg and ffprobe at runtime.

1) Generic Compilation and Installation on Unix-like Systems
2) Changing Installation Path
3) Compiling with libnotify
4) Build on Windows

------------------------------

1) Generic Compilation and Installation on Unix-like Systems

Be sure you have installed the following libraries in order to build QWinFF:
	- Qt 4.3 or later
	- libnotify (only when compiled with USE_LIBNOTIFY=1)

Decompress the source code; open a terminal and enter the directory.

Type "make".

If everything is ok, you may type "make install" to install it.
This will install QWinFF in /usr/local.

If "make" fails, it's probably because the Qt3 qmake is used instead of
the Qt4 one.
Try to type something like this (just examples):
make QMAKE=qmake-qt4
or
make QMAKE=/usr/share/qt4/bin/qmake

------------------------------

2) Changing Installation Path

By default, QWinFF will be installed to /usr/local. You can change it by
using PREFIX.

Examples:
make PREFIX=/usr
make PREFIX=/usr install

That would install QWinFF under /usr

Note that the PREFIX used by "make" and "make install" must be the same.

In addition, you must install ffmpeg and ffprobe in order to run QWinFF.
Some output formats may require additional packages to be installed.
For example, non-free media formats are not supported by default in
Debian and Ubuntu. Please search for information about how to enable
these features by keywords like "ffmpeg non-free" or "ffmpeg mp3".

------------------------------

3) Compiling with libnotify

QWinFF provides 3 kinds of notification types:
  - libnotify
  - notify-send command-line utility
  - Qt MessageBox

If libnotify is enabled, libnotify will be used. Otherwise, QWinFF will
look for the notify-send utility. If notify-send is available on the
system, it will be used. If neither of them are available, QWinFF will
fallback to Qt MessageBox. Qt MessageBox is always available since it only
requires Qt.

If you want to compile with libnotify, type "make USE_LIBNOTIFY=1"
instead of "make". Compiling with libnotify also requires gtk2 headers.

Note that libnotify 0.7+ is not compatible with its older versions
(0.5.x, 0.6.x). QWinFF will compile with both APIs, but if you compile
it with libnotify 0.7, it will only work with libnotify runtime 0.7,
and vice versa.

------------------------------

4) Build on Windows

You must install Qt4 SDK to build QWinFF.
After installing Qt4, you have to add the paths containing qt tools
and MinGW executables to PATH.

Extract the source code to a directory.

Open the directory and click on "windows_build.bat".
(or "windows_build_portable.bat" which will build QWinFF as a portable
application)

If the build was successful,  the output files will be copied to
windows_release\. (or windows_release_portable\ for portable version)

Copy necessary Qt DLLs to windows_release\
If you are using the official QtSDK, the DLLs are probably QtCore4.dll,
QtGui4.dll, libgcc_s_dw2-1.dll, libstdc++-6.dll and mingwm10.dll.
These files can be found in <QtSDK>\Desktop\Qt\4.x.x\mingw\bin.

QWinFF depends on several external programs. Currently these programs are:
  - ffmpeg (required)
  - ffprobe (required)
  - ffplay or mplayer (optional, for previewing audio/video cutting)
  - sox (optional, for scaling audio length)
Download the executables and put them under windows_release\tools.

Now you can execute QWinFF by clicking on the executable file.

The NSIS script (qwinff.nsi) under windows_release\ can be used to create
an installer. (see http://nsis.sourceforge.net)
